[[plugins]]
repo = 'markonm/traces.vim'

[[plugins]]
repo = 'vim-airline/vim-airline'

[[plugins]]
repo = 'ap/vim-buftabline'

[[plugins]]
repo = 'junegunn/fzf'
build_on = '''
./install -all
'''

[[plugins]]
repo = 'junegunn/fzf.vim'

[[plugins]]
repo = 'numToStr/Comment.nvim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'nvim-lua/plenary.nvim'

[[plugins]]
repo = 'scalameta/nvim-metals'

[[plugins]]
repo = 'Shougo/defx.nvim'
hook_add = '''
autocmd VimEnter * execute 'Defx'
autocmd FileType defx call s:defx_my_settings()
function! s:defx_my_settings() abort
  " Define mappings
  nnoremap <silent><buffer><expr> b defx#do_action('multi', [
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree', 
  \  'close_tree'])

  nnoremap <silent><buffer><expr> <CR> 
  \  defx#is_directory() ? defx#do_action('open_tree', 'recursive:10') : defx#do_action('preview')
  nnoremap <silent><buffer><expr> E    defx#do_action('open', 'vsplit')
  nnoremap <silent><buffer><expr> P    defx#do_action('open', 'pedit')
  nnoremap <silent><buffer><expr> o
  \  match(bufname('%'), 'explorer') >= 0 ?
  \  (defx#is_directory() ? 0 : defx#do_action('drop', 'vsplit')) :
  \  (defx#is_directory() ? 0 : defx#do_action('multi', ['open', 'quit']))

  nnoremap <silent><buffer><expr> j       line('.') == line('$') ? 'gg' : 'j'
  nnoremap <silent><buffer><expr> k       line('.') == 1 ? 'G' : 'k'
  nnoremap <silent><buffer><expr> l       defx#is_directory() ? defx#do_action('open') : 0
  nnoremap <silent><buffer><expr> h       defx#do_action('cd', ['..'])
  nnoremap <silent><buffer><expr> ~       defx#do_action('cd')
  nnoremap <silent><buffer><expr> cd      defx#do_action('change_vim_cwd')

  nnoremap <silent><buffer><expr> N       defx#do_action('new_directory')
  nnoremap <silent><buffer><expr> n       defx#do_action('new_file')
  nnoremap <silent><buffer><expr> m       defx#do_action('move')
  nnoremap <silent><buffer><expr> c       defx#do_action('copy')
  nnoremap <silent><buffer><expr> p       defx#do_action('paste')
  nnoremap <silent><buffer><expr> d       defx#do_action('remove')
  nnoremap <silent><buffer><expr> r       defx#do_action('rename')
  nnoremap <silent><buffer><expr> <Esc>   defx#do_action('quit')
  nnoremap <silent><buffer><expr> q       defx#do_action('quit')

  nnoremap <silent><buffer><expr> yy      defx#do_action('yank_path')
  nnoremap <silent><buffer><expr> x       defx#do_action('execute_system')
  nnoremap <silent><buffer><expr> .       defx#do_action('toggle_ignored_files')
  nnoremap <silent><buffer><expr> <Space> defx#do_action('toggle_select') . 'j'
  nnoremap <silent><buffer><expr> *       defx#do_action('toggle_select_all')
  nnoremap <silent><buffer><expr> R       defx#do_action('redraw')
endfunction
'''
hook_post_source = '''
call defx#custom#option('_', {
\ 'winwidth': 50,
\ 'ignored_files': '.*,target*',
\ 'direction': 'topleft',
\ 'toggle': 1,
\ 'columns': 'indent:git:icons:filename:mark',
\ })
'''

[[plugins]]
repo ="kristijanhusak/defx-git"
hook_add = '''
call defx#custom#column('git', 'indicators', {
  \ 'Modified'  : 'M',
  \ 'Staged'    : '+',
  \ 'Untracked' : '✭',
  \ 'Renamed'   : '➜',
  \ 'Unmerged'  : '═',
  \ 'Ignored'   : '☒',
  \ 'Deleted'   : '-',
  \ 'Unknown'   : '?'
  \ })
'''
